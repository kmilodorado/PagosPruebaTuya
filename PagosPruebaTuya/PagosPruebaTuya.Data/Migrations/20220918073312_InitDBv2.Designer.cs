// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PagosPruebaTuya.Data.Models.AplicationDb;

#nullable disable

namespace PagosPruebaTuya.Data.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20220918073312_InitDBv2")]
    partial class InitDBv2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("city")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('SystemTuyaPagos')");

                    b.Property<Guid>("fkUser_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("lastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("lastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numberExt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("numberInt")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("quarter")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("state")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("streetType")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fkUser_id");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.DetailOrder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('SystemTuyaPagos')");

                    b.Property<Guid>("fkOrder_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fkProduct_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("lastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("lastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValueSql("(0)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fkOrder_id");

                    b.HasIndex("fkProduct_id");

                    b.ToTable("DetailOrder", (string)null);
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.OrderProduct", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('SystemTuyaPagos')");

                    b.Property<int>("fkAddress_id")
                        .HasColumnType("int");

                    b.Property<int?>("fkPaymentMethod_id")
                        .HasColumnType("int");

                    b.Property<Guid>("fkUser_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("lastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("lastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValueSql("(0)");

                    b.Property<int>("stateOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("id");

                    b.HasIndex("fkAddress_id");

                    b.HasIndex("fkPaymentMethod_id");

                    b.HasIndex("fkUser_id");

                    b.ToTable("OrderProduct", (string)null);
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.PaymentMethod", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("lastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.ToTable("PaymentMethod", (string)null);
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.Product", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('SystemTuyaPagos')");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("lastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("lastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("price")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("id");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("pass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.Address", b =>
                {
                    b.HasOne("PagosPruebaTuya.Data.Models.User", "fkUser")
                        .WithMany("Addresses")
                        .HasForeignKey("fkUser_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fkUser");
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.DetailOrder", b =>
                {
                    b.HasOne("PagosPruebaTuya.Data.Models.OrderProduct", "fkOrder")
                        .WithMany("detailOrders")
                        .HasForeignKey("fkOrder_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PagosPruebaTuya.Data.Models.Product", "fkProduct")
                        .WithMany("DetailOrders")
                        .HasForeignKey("fkProduct_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fkOrder");

                    b.Navigation("fkProduct");
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.OrderProduct", b =>
                {
                    b.HasOne("PagosPruebaTuya.Data.Models.Address", "fkAddress")
                        .WithMany("orders")
                        .HasForeignKey("fkAddress_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PagosPruebaTuya.Data.Models.PaymentMethod", "fkPaymentMethod")
                        .WithMany("orders")
                        .HasForeignKey("fkPaymentMethod_id");

                    b.HasOne("PagosPruebaTuya.Data.Models.User", "fkUser")
                        .WithMany("orders")
                        .HasForeignKey("fkUser_id")
                        .IsRequired();

                    b.Navigation("fkAddress");

                    b.Navigation("fkPaymentMethod");

                    b.Navigation("fkUser");
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.Address", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.OrderProduct", b =>
                {
                    b.Navigation("detailOrders");
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.PaymentMethod", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.Product", b =>
                {
                    b.Navigation("DetailOrders");
                });

            modelBuilder.Entity("PagosPruebaTuya.Data.Models.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
